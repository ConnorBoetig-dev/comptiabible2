{
    "title": "Domain 4.1: Given a scenario, apply common security techniques to computing resources.",
    "content": "<article>\n  <h2>🧱 Secure Baselines</h2>\n  <ul>\n    <li><strong>📋 Establish:</strong> Define a standard configuration for systems to ensure consistency and security from the start.</li>\n    <li><strong>🚀 Deploy:</strong> Apply the secure baseline during system setup to automate hardening and reduce human error.</li>\n    <li><strong>🔄 Maintain:</strong> Regularly update and audit systems to stay compliant with the baseline over time.</li>\n  </ul>\n\n  <h2>🎯 Hardening Targets</h2>\n  <ul>\n    <li><strong>📱 Mobile Devices:</strong> Use MDM, strong passwords, encryption, remote wipe, and app restrictions.</li>\n    <li><strong>💻 Workstations:</strong> Disable unused ports/services, enable endpoint protection, apply GPOs, and software whitelisting.</li>\n    <li><strong>🔀 Switches:</strong> Use port security, disable unused ports, enable MAC filtering, and secure management access.</li>\n    <li><strong>📡 Routers:</strong> Change default credentials, use strong encryption, disable unused services (e.g., WPS).</li>\n    <li><strong>☁️ Cloud Infrastructure:</strong> Apply IAM, network segmentation, encryption, and monitor with logging tools (e.g., CloudTrail).</li>\n    <li><strong>🖥️ Servers:</strong> Harden OS, restrict administrative access, apply timely patches, and segment by function.</li>\n    <li><strong>⚙️ ICS/SCADA:</strong> Isolate from the internet, use firewalls and anomaly detection, patch only after rigorous testing.</li>\n    <li><strong>🤖 Embedded Systems:</strong> Minimal OS hardening, remove unnecessary features, and physically secure the hardware.</li>\n    <li><strong>⏱️ RTOS (Real-Time OS):</strong> Prioritize system integrity and timing accuracy—typically used in industrial or medical systems.</li>\n    <li><strong>🌐 IoT Devices:</strong> Change default creds, update firmware, disable unnecessary services, and isolate on network.</li>\n  </ul>\n\n  <h2>📶 Wireless Devices</h2>\n  <ul>\n    <li><strong>🛠️ Installation Considerations:</strong> Evaluate physical layout for signal coverage, interference, and access point placement.</li>\n    <li><strong>🌡️ Heat Maps:</strong> Visual tools showing wireless signal strength to help optimize placement.</li>\n  </ul>\n\n  <h2>📱 Mobile Solutions</h2>\n  <ul>\n    <li><strong>🛡️ Mobile Device Management (MDM):</strong> Centralized control over mobile devices—enforces security policies, remote wipe, encryption, and app restrictions.</li>\n  </ul>\n\n  <h2>🧳 Deployment Models</h2>\n  <ul>\n    <li><strong>👖 BYOD (Bring Your Own Device):</strong> User-owned devices on the corporate network—requires strict policies and MDM enforcement.</li>\n    <li><strong>🏢📱 COPE (Corporate-Owned, Personally Enabled):</strong> Company-owned device but allows limited personal use—gives IT more control.</li>\n    <li><strong>📲 CYOD (Choose Your Own Device):</strong> Users pick from a list of approved devices—balance between flexibility and security.</li>\n  </ul>\n\n  <h2>📡 Connection Methods</h2>\n  <ul>\n    <li><strong>📶 Cellular:</strong> Secure and isolated from internal LAN, but depends on carrier coverage.</li>\n    <li><strong>📡 Wi-Fi:</strong> Must be encrypted (WPA3 preferred) and segmented for secure use.</li>\n    <li><strong>🔵 Bluetooth:</strong> Short-range and vulnerable to pairing attacks—disable when not in use.</li>\n  </ul>\n\n  <h2>🔐 Wireless Security Settings</h2>\n  <ul>\n    <li><strong>🛡️ WPA3 (Wi-Fi Protected Access 3):</strong> Strongest Wi-Fi encryption—protects against brute force and improves key exchange (SAE).</li>\n    <li><strong>👤 AAA / RADIUS:</strong> Authentication, Authorization, Accounting—manages network access control.</li>\n    <li><strong>🔑 Cryptographic Protocols:</strong> Includes TLS, IPsec, SSH—used to encrypt and protect wireless communication.</li>\n    <li><strong>✅ Authentication Protocols:</strong> EAP variants, PEAP, and others—used to verify user identity before granting network access.</li>\n  </ul>\n\n  <h2>💻 Application Security</h2>\n  <ul>\n    <li><strong>🧹 Input Validation:</strong> Ensures clean, expected input—prevents injection attacks (SQLi, XSS).</li>\n    <li><strong>🍪 Secure Cookies:</strong> Flags (Secure, HttpOnly) help protect cookies from interception and XSS theft.</li>\n    <li><strong>🔍 Static Code Analysis:</strong> Scans source code for security flaws before the app runs—helps catch vulnerabilities early.</li>\n    <li><strong>🖊️ Code Signing:</strong> Digitally signs code to verify authenticity and integrity—boosts trust and security.</li>\n  </ul>\n\n  <h2>🧪 Sandboxing</h2>\n  <ul>\n    <li>Runs applications in isolated environments to prevent malware or rogue processes from affecting the system.</li>\n  </ul>\n\n  <h2>👀 Monitoring</h2>\n  <ul>\n    <li>Continuous observation of systems, networks, and apps for suspicious or malicious activity—key for early detection and response.</li>\n  </ul>\n</article>"
  }
  