{
    "title": "Domain 1.4: Explain the importance of using appropriate cryptographic solutions.",
    "content": "<article>\n  <h2>🔑 Public Key Infrastructure (PKI)</h2>\n  <ul>\n    <li><strong>Public key:</strong> Shared openly; encrypts data or verifies digital signatures.</li>\n    <li><strong>Private key:</strong> Kept secret; decrypts data or creates digital signatures.</li>\n    <li><strong>Key escrow:</strong> A third party securely stores private keys for recovery.</li>\n    <li><strong>Use Cases:</strong> HTTPS, email encryption, VPNs, authentication systems.</li>\n  </ul>\n\n  <h2>🔐 Encryption Types</h2>\n  <ul>\n    <li><strong>Full-disk:</strong> Encrypts the entire drive (e.g., BitLocker).</li>\n    <li><strong>Partition:</strong> Encrypts a specific section of the disk.</li>\n    <li><strong>File:</strong> Encrypts individual files (e.g., EFS).</li>\n    <li><strong>Volume:</strong> Encrypts a virtual container.</li>\n    <li><strong>Database:</strong> Encrypts sensitive DB fields or whole databases.</li>\n    <li><strong>Record:</strong> Encrypts specific entries in a DB.</li>\n    <li><strong>Transport:</strong> Protects data in transit (e.g., TLS, VPN).</li>\n  </ul>\n\n  <h2>🔑 Encryption Types and Concepts</h2>\n  <ul>\n    <li><strong>Asymmetric:</strong> Uses public/private keys (e.g., RSA).</li>\n    <li><strong>Symmetric:</strong> Same key for encrypt/decrypt (e.g., AES).</li>\n    <li><strong>Key exchange:</strong> Secure method to share encryption keys (e.g., Diffie-Hellman).</li>\n    <li><strong>Algorithms:</strong> Math behind encryption (e.g., RSA, AES).</li>\n    <li><strong>Key length:</strong> Longer = stronger but slower (128-bit, 256-bit).</li>\n  </ul>\n\n  <h2>🧰 Security Tools</h2>\n  <ul>\n    <li><strong>TPM:</strong> Secure chip for storing keys (used by BitLocker).</li>\n    <li><strong>HSM:</strong> Hardware that secures and manages encryption keys (used in banking).</li>\n    <li><strong>KMS:</strong> Centralized encryption key lifecycle management.</li>\n    <li><strong>Secure enclave:</strong> Isolated space to protect data/code even if OS is compromised.</li>\n  </ul>\n\n  <h2>🕵️‍♂️ Obfuscation Techniques</h2>\n  <ul>\n    <li><strong>Steganography:</strong> Hides data inside images/audio.</li>\n    <li><strong>Tokenization:</strong> Replaces sensitive data with tokens.</li>\n    <li><strong>Data masking:</strong> Hides real data with realistic fakes.</li>\n  </ul>\n\n  <h2>🔄 Hashing & Related Techniques</h2>\n  <ul>\n    <li><strong>Hashing:</strong> One-way function to verify data integrity (e.g., SHA-256).</li>\n    <li><strong>Salting:</strong> Adds randomness to input to prevent rainbow table attacks.</li>\n    <li><strong>Key Stretching:</strong> Strengthens weak passwords (e.g., bcrypt, PBKDF2).</li>\n  </ul>\n\n  <h2>✍️ Digital Signatures</h2>\n  <ul>\n    <li>Ensures authenticity and integrity of data.</li>\n    <li>Created with private key, verified with public key.</li>\n  </ul>\n\n  <h2>⛓️ Blockchain & Open Ledgers</h2>\n  <ul>\n    <li><strong>Blockchain:</strong> Decentralized, tamper-proof transaction ledger.</li>\n    <li><strong>Open public ledger:</strong> Anyone can view and verify (e.g., Bitcoin).</li>\n  </ul>\n\n  <h2>🧾 Certificates and Trust</h2>\n  <ul>\n    <li><strong>Certificate Authorities (CAs):</strong> Trusted entities that issue certs.</li>\n    <li><strong>CRLs:</strong> Lists of revoked certificates.</li>\n    <li><strong>OCSP:</strong> Real-time cert validation method.</li>\n    <li><strong>Self-signed:</strong> Signed by itself; not trusted by default.</li>\n    <li><strong>Third-party:</strong> Signed by a trusted CA.</li>\n    <li><strong>Root of trust:</strong> The trusted base cert in the chain.</li>\n    <li><strong>CSR:</strong> Request for a cert, includes public key and identity info.</li>\n    <li><strong>Wildcard Cert:</strong> Covers all subdomains (e.g., *.example.com).</li>\n  </ul>\n</article>"
  }
  